{
  "apiVersion": "apiextensions.k8s.io/v1",
  "kind": "CustomResourceDefinition",
  "metadata": {
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.14.0",
      "meta.helm.sh/release-name": "consul",
      "meta.helm.sh/release-namespace": "consul"
    },
    "creationTimestamp": "2025-03-01T13:54:00Z",
    "deletionGracePeriodSeconds": 0,
    "deletionTimestamp": "2025-05-25T18:19:40Z",
    "finalizers": [],
    "generation": 1,
    "labels": {
      "app": "consul",
      "app.kubernetes.io/managed-by": "Helm",
      "chart": "consul-helm",
      "component": "crd",
      "heritage": "Helm",
      "release": "consul"
    },
    "name": "gatewayclassconfigs.consul.hashicorp.com",
    "resourceVersion": "3741388",
    "uid": "8fc10718-c449-484a-822b-3f4ea7855a95"
  },
  "spec": {
    "conversion": {
      "strategy": "None"
    },
    "group": "consul.hashicorp.com",
    "names": {
      "kind": "GatewayClassConfig",
      "listKind": "GatewayClassConfigList",
      "plural": "gatewayclassconfigs",
      "singular": "gatewayclassconfig"
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1alpha1",
        "schema": {
          "openAPIV3Schema": {
            "description": "GatewayClassConfig defines the values that may be set on a GatewayClass for Consul API Gateway.",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "Spec defines the desired state of GatewayClassConfig.",
                "properties": {
                  "copyAnnotations": {
                    "description": "Annotation Information to copy to services or deployments",
                    "properties": {
                      "service": {
                        "description": "List of annotations to copy to the gateway service.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "deployment": {
                    "description": "Deployment defines the deployment configuration for the gateway.",
                    "properties": {
                      "defaultInstances": {
                        "default": 1,
                        "description": "Number of gateway instances that should be deployed by default",
                        "format": "int32",
                        "maximum": 8,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "maxInstances": {
                        "default": 8,
                        "description": "Max allowed number of gateway instances",
                        "format": "int32",
                        "maximum": 8,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "minInstances": {
                        "default": 1,
                        "description": "Minimum allowed number of gateway instances",
                        "format": "int32",
                        "maximum": 8,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "resources": {
                        "description": "Resources defines the resource requirements for the gateway.",
                        "properties": {
                          "claims": {
                            "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers.",
                            "items": {
                              "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                              "properties": {
                                "name": {
                                  "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "type": "array",
                            "x-kubernetes-list-map-keys": [
                              "name"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "limits": {
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            },
                            "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                            "type": "object"
                          },
                          "requests": {
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            },
                            "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mapPrivilegedContainerPorts": {
                    "description": "The value to add to privileged ports ( ports < 1024) for gateway containers",
                    "format": "int32",
                    "type": "integer"
                  },
                  "metrics": {
                    "description": "Metrics defines how to configure the metrics for a gateway.",
                    "properties": {
                      "enabled": {
                        "description": "Enable metrics for this class of gateways. If unspecified, will inherit\nbehavior from the global Helm configuration.",
                        "type": "boolean"
                      },
                      "path": {
                        "description": "The path used for metrics.",
                        "type": "string"
                      },
                      "port": {
                        "description": "The port used for metrics.",
                        "format": "int32",
                        "maximum": 65535,
                        "minimum": 1024,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "nodeSelector": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "type": "object"
                  },
                  "openshiftSCCName": {
                    "description": "The name of the OpenShift SecurityContextConstraints resource for this gateway class to use.",
                    "type": "string"
                  },
                  "podSecurityPolicy": {
                    "description": "The name of an existing Kubernetes PodSecurityPolicy to bind to the managed ServiceAccount if ACLs are managed.",
                    "type": "string"
                  },
                  "serviceType": {
                    "description": "Service Type string describes ingress methods for a service",
                    "enum": [
                      "ClusterIP",
                      "NodePort",
                      "LoadBalancer"
                    ],
                    "type": "string"
                  },
                  "tolerations": {
                    "description": "Tolerations allow the scheduler to schedule nodes with matching taints.\nMore Info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
                    "items": {
                      "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                      "properties": {
                        "effect": {
                          "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                          "type": "string"
                        },
                        "tolerationSeconds": {
                          "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "value": {
                          "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "served": true,
        "storage": true
      }
    ]
  },
  "status": {
    "acceptedNames": {
      "kind": "GatewayClassConfig",
      "listKind": "GatewayClassConfigList",
      "plural": "gatewayclassconfigs",
      "singular": "gatewayclassconfig"
    },
    "conditions": [
      {
        "lastTransitionTime": "2025-03-01T13:54:00Z",
        "message": "no conflicts found",
        "reason": "NoConflicts",
        "status": "True",
        "type": "NamesAccepted"
      },
      {
        "lastTransitionTime": "2025-03-01T13:54:00Z",
        "message": "the initial names have been accepted",
        "reason": "InitialNamesAccepted",
        "status": "True",
        "type": "Established"
      },
      {
        "lastTransitionTime": "2025-05-25T18:19:40Z",
        "message": "CustomResource deletion is in progress",
        "reason": "InstanceDeletionInProgress",
        "status": "True",
        "type": "Terminating"
      }
    ],
    "storedVersions": [
      "v1alpha1"
    ]
  }
}
